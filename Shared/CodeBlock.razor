@inject IJSRuntime Js

@if(Message is not null)
{
    <div>
        <h3>
            @(Message.Text)
        </h3>
        @if(_showCode)
        {
            <pre><code class='language-@(Message.Language)' @ref='_ref'>@Message.Code</code></pre>
        }
        <button @onclick='SHC'>StateHasChanged</button>
        <button @onclick='Flick'>Flick</button>
    </div>
}

@code
{
    [Parameter]
    public MessageData Message { get; set; }

    private ElementReference? _ref;
    private bool _showCode = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(Message is null) return;

        if(_showCode)
            await Js.InvokeVoidAsync("hljs.highlightElement", _ref);
    }

    private async Task SHC()
    {
        StateHasChanged();
        await Js.InvokeVoidAsync("hljs.highlightElement", _ref);
    }

    private async Task Flick()
    {
        _showCode = false;
        StateHasChanged();
        await Task.Delay(1);
        _showCode = true;
    }
}
